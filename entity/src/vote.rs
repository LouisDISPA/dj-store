//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "vote")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: u32,
    pub user_token: Uuid,
    pub room_id: u32,
    pub music_id: i64, // fix this (when deezer api is changed)
    pub vote_date: DateTimeUtc,
    pub like: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::music::Entity",
        from = "Column::MusicId",
        to = "super::music::Column::Id"
    )]
    Music,
    #[sea_orm(
        belongs_to = "super::room::Entity",
        from = "Column::RoomId",
        to = "super::room::Column::PublicId"
    )]
    Room,
}

// `Related` trait has to be implemented by hand
impl Related<super::music::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Music.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
